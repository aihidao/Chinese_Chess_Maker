<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_che</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-300</depth>
  <persistent>0</persistent>
  <parentName>obj_piece</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///para
image_speed=0;
img_ind=global.pieces[x/50,y/50]/100;
image_index=img_ind;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p_x=x/50;
p_y=y/50;
global.select_type=global.pieces[p_x,p_y];
//global.place_promit[i,j]
//
global.findnumber=1;
with(obj_pp){
    instance_destroy();
}

for(i=0;i&lt;global.ROW-1;++i){
    for(j=0;j&lt;global.COL-1;++j){
        global.place_promit[i,j]=0;
    }
}
if(p_x&gt;0){
    for(i=p_x-1;i&gt;=0;i--){
        if(global.pieces[i,p_y]==0){
            instance_create(i*50, p_y*50, obj_pp);
            global.place_promit[i,p_y]=1;
        }else if (global.pieces[i,p_y]==2){
            global.place_promit[i,p_y]=2;
            break;
        }else{
            break;
        }
    }
}
if(p_x&lt;global.ROW-1){
    for(i=p_x+1;i&lt;global.ROW;i++){
        if(global.pieces[i,p_y]==0){
            instance_create(i*50, p_y*50, obj_pp);
            global.place_promit[i,p_y]=1;
        }else if(global.pieces[i,p_y]==2){
            global.place_promit[i,p_y]=2;
            break;
        }else{
            break;
        } 
    }
}
if(p_y&gt;0){
    for(j=p_y-1;j&gt;=0;j--){
        if(global.pieces[p_x,j]==0){
            instance_create(p_x*50, j*50, obj_pp);
            global.place_promit[p_x,j]=1;
        }else if(global.pieces[p_x,j]==2){
            global.place_promit[p_x,j]=2;
            break;
        }else{
            break;
        }
    }
}
if(p_y&lt;global.COL-1){
    for(j=p_y+1;j&lt;global.COL;j++){
        if(global.pieces[p_x,j]==0){;
            instance_create(p_x*50, j*50, obj_pp);
            global.place_promit[p_x,j]=1;
        }else if(global.pieces[p_x,j]==2){
            global.place_promit[p_x,j]=2;
            break;
        }else{
            break;
        } 
    }
}
//找到被选中的对象
for(i=0;i&lt;instance_number(obj_piece);i++){
    if(x==(instance_find(obj_piece,i)).x&amp;&amp;y==(instance_find(obj_piece,i)).y){
        global.select=instance_find(obj_piece,i);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
